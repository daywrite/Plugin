@{
    ViewBag.Title = "Empty";
}

<!-- Page title -->
<div class="page-title">
    <h2><i class="icon-desktop color"></i> Charts <small>Subtext for header</small></h2>
    <hr />
</div>
<!-- Page title -->

<div class="row">
    <div class="col-md-12">
        <!-- Curve charts -->

        <div class="awidget">
            <div class="awidget-head">
                <h3>Curve Chart</h3>
            </div>
            <div class="awidget-body">
                <div class="chart-container">
                    <div id="curve-chart" class="chart-placeholder"></div>
                </div>
            </div>
        </div>

        <!-- Curve chart -->
        <!-- Bar charts -->

        <div class="awidget">
            <div class="awidget-head">
                <h3>Bar Chart</h3>
            </div>
            <div class="awidget-body">
                <div class="chart-container">
                    <div id="bar-chart" class="chart-placeholder"></div>
                </div>
            </div>
        </div>

        <!-- Bar chart -->
        <!-- Realtime charts -->

        <div class="awidget">
            <div class="awidget-head">
                <h3>Real Time Chart</h3>
            </div>
            <div class="awidget-body">
                <div class="chart-container">
                    <div id="live-chart" class="chart-placeholder"></div>
                </div>
                <hr />
                Time Inverval: <input id="updateInterval" type="text" class="form-control" value="">
            </div>
        </div>

        <!-- Realtime chart -->
        <!-- Pie chart starts -->
        <div class="awidget">
            <div class="awidget-head">
                <h3>Pie Chart</h3>
            </div>
            <div class="awidget-body">
                <div class="row">
                    <div class="col-md-4">
                        <div id="pie-chart" class="chart-placeholder"></div>
                    </div>
                    <div class="col-md-4">
                        <div id="pie-chart2" class="chart-placeholder"></div>
                    </div>
                    <div class="col-md-4">
                        <div id="pie-chart3" class="chart-placeholder"></div>
                    </div>
                </div>
            </div>
        </div>
        <!-- Pie chart ends -->
    </div>
</div>

@section scripts
{

    <!-- Javascript for charts -->

    <script type="text/javascript">

        /* Curve chart starts */

        $(function () {

            var d1 = [];
            for (var i = 0; i < Math.PI * 2; i += 0.25) {
                d1.push([i, Math.sin(i)]);
            }

            var d2 = [];
            for (var i = 0; i < Math.PI * 2; i += 0.25) {
                d2.push([i, Math.cos(i)]);
            }


            $.plot("#curve-chart", [
               { label: "sin(x)", data: d1 },
               { label: "cos(x)", data: d2 }
            ], {
                series: {
                    lines: { show: true, fill: true },
                    points: { show: true }
                },
                colors: ["#16cbe6", "#0fa6bc"],
                xaxis: {
                    ticks: [
                       0, [Math.PI / 2, "4"], [Math.PI, "8"],
                       [Math.PI * 3 / 2, "12"], [Math.PI * 2, "16"]
                    ]
                },
                yaxis: {
                    ticks: 10,
                    min: -2,
                    max: 2,
                    tickDecimals: 3
                },
                grid: {
                    borderWidth: 0
                }
            });

            // Add the Flot version string to the footer

            $("#footer").prepend("Flot " + $.plot.version + " &ndash; ");
        });

        /* Curve chart ends */

        /* Bar Chart starts */

        $(function () {

            var d1 = [];
            for (var i = 0; i <= 35; i += 1)
                d1.push([i, parseInt(Math.random() * 30)]);

            var d2 = [];
            for (var i = 0; i <= 35; i += 1)
                d2.push([i, parseInt(Math.random() * 30)]);


            var stack = 0, bars = true, lines = false, steps = false;

            function plotWithOptions() {
                $.plot($("#bar-chart"), [d1, d2], {
                    series: {
                        stack: stack,
                        lines: { show: lines, fill: true, steps: steps },
                        bars: { show: bars, barWidth: 0.8 }
                    },
                    grid: {
                        borderWidth: 0, hoverable: true, color: "#777"
                    },
                    colors: ["#16cbe6", "#0fa6bc"],
                    bars: {
                        show: true,
                        lineWidth: 0,
                        fill: true,
                        fillColor: { colors: [{ opacity: 0.9 }, { opacity: 0.8 }] }
                    }
                });
            }

            plotWithOptions();

            $(".stackControls input").click(function (e) {
                e.preventDefault();
                stack = $(this).val() == "With stacking" ? true : null;
                plotWithOptions();
            });
            $(".graphControls input").click(function (e) {
                e.preventDefault();
                bars = $(this).val().indexOf("Bars") != -1;
                lines = $(this).val().indexOf("Lines") != -1;
                steps = $(this).val().indexOf("steps") != -1;
                plotWithOptions();
            });

        });

        /* Bar chart ends */

        /* Realtime chart starts */

        $(function () {
            // we use an inline data source in the example, usually data would
            // be fetched from a server
            var data = [], totalPoints = 300;
            function getRandomData() {
                if (data.length > 0)
                    data = data.slice(1);

                // do a random walk
                while (data.length < totalPoints) {
                    var prev = data.length > 0 ? data[data.length - 1] : 50;
                    var y = prev + Math.random() * 10 - 5;
                    if (y < 10)
                        y = 10;
                    if (y > 70)
                        y = 70;
                    data.push(y);
                }

                // zip the generated y values with the x values
                var res = [];
                for (var i = 0; i < data.length; ++i)
                    res.push([i, data[i]])
                return res;
            }

            // setup control widget
            var updateInterval = 300;
            $("#updateInterval").val(updateInterval).change(function () {
                var v = $(this).val();
                if (v && !isNaN(+v)) {
                    updateInterval = +v;
                    if (updateInterval < 1)
                        updateInterval = 1;
                    if (updateInterval > 2000)
                        updateInterval = 2000;
                    $(this).val("" + updateInterval);
                }
            });

            // setup plot
            var options = {
                series: { shadowSize: 0 }, // drawing is faster without shadows
                lines: { fill: true },
                grid: { borderWidth: 0 },
                yaxis: { min: 0, max: 100 },
                colors: ["#16cbe6"]
            };
            var plot = $.plot($("#live-chart"), [getRandomData()], options);

            function update() {
                plot.setData([getRandomData()]);
                // since the axes don't change, we don't need to call plot.setupGrid()
                plot.draw();

                setTimeout(update, updateInterval);
            }

            update();
        });

        /* Realtime charts ends */

        /* Pie chart starts */

        $(function () {

            var data = [];
            var series = Math.floor(Math.random() * 5) + 1;
            for (var i = 0; i < series; i++) {
                data[i] = { label: "Series" + (i + 1), data: Math.floor(Math.random() * 10) + 1 }
            }

            $.plot($("#pie-chart"), data,
            {
                series: {
                    pie: {
                        show: true,
                        radius: 1,
                        label: {
                            show: true,
                            radius: 3 / 4,
                            formatter: function (label, series) {
                                return '<div style="font-size:8pt;text-align:center;padding:2px;color:white;">' + label + '<br/>' + Math.round(series.percent) + '%</div>';
                            },
                            background: { opacity: 0 }
                        }
                    }
                },
                grid: { hoverable: true },
                legend: {
                    show: false
                },
                colors: ["#16cbe6", "#16bdd6", "#13aec5", "#2fbacf", "#31c9e0"]
            });

            $.plot($("#pie-chart2"), data,
            {
                series: {
                    pie: {
                        show: true
                    }
                },
                colors: ["#16cbe6", "#16bdd6", "#13aec5", "#2fbacf", "#31c9e0"],
                grid: { hoverable: true }
            });


            $.plot($("#pie-chart3"), data,
            {
                series: {
                    pie: {
                        show: true
                    }
                },
                grid: { hoverable: true },
                legend: {
                    show: false
                },
                colors: ["#16cbe6", "#16bdd6", "#13aec5", "#2fbacf", "#31c9e0"]
            });

            /* Pie chart ends */

        });


    </script>
}